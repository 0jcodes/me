{"ast":null,"code":"var _jsxFileName = \"F:\\\\my-portfolio\\\\src\\\\components\\\\pages.jsx\";\nimport React, { Component } from 'react';\nexport default class PagesC extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"portfolio_details_area section_gap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_details_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: \"img/portfolio/portfolio-details.jpg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"offset-lg-1 col-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_right_text mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Cricket Statistics and Analysis\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"The main idea behind this project was to create a web page to display statistics of every cricket player.\"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Language\"), \": \", React.createElement(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 32 32\",\n      xmlns: \"https://legacy.python.org/community/logos/python-powered-h.svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \"Python\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Frameworks\"), \": flask,highcharts\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Libraries\"), \": BeautifulSoup,Pandas\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Website\"), \": \", React.createElement(\"a\", {\n      href: \"https://github.com/obedjunias/CricketStats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"View Project\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Completed\"), \":26 Nov 2019\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Cricket is a sport that generates a variety of statistics. Statistics are recorded for each player during a match, and aggregated over a career. At the professional level, statistics for Test cricket, one-day internationals, and first-class cricket are recorded separately. However, since Test matches are a form of first-class cricket, a player's first-class statistics will include their Test match statistics \\u2013 but not vice versa. Nowadays records are also maintained for List A and Twenty20 limited over matches. These matches are normally limited over games played domestically at the national level by leading Test nations. Since one-day internationals are a form of List A limited over matches, a player's List A statistics will include their ODI match statistics \\u2013 but not vice versa. We provide the web's most comprehensive collection of cricket records, statistics and graphs relating to every facet of international cricket in all forms - Test Cricket, One Day Internationals (ODIs) and Twenty20 Internationals (T20s).\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"The main idea behind this project was to create a web page to display the above mentioned statistics of every cricket player. These statistics are scraped from the internet and then data cleaning and munging was done so as to use this data for further analysis. The data was further used to display player statistics and his achievements in international cricket.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"They can also be graphically visualised on the webpage.\")))), React.createElement(\"section\", {\n      className: \"portfolio_details_area section_gap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_details_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: \"img/portfolio/portfolio-details.jpg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"offset-lg-1 col-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_right_text mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Movie Recommendation System\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Movie recommendation systems provide a mechanism to assist users in classifying users with similar interests.\"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Language\"), \": \", React.createElement(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 32 32\",\n      xmlns: \"https://legacy.python.org/community/logos/python-powered-h.svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \"Python\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Libraries and Frameworks\"), \": Numpy,Pandas,Scikit Learn and Matplotlib\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Website\"), \": \", React.createElement(\"a\", {\n      href: \"https://github.com/obedjunias/Movie-Recommendation-System\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"View Project\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"On Going\"), \":Will be completed soon\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Recommender systems are information filtering tools that aspire to predict the rating for users and items, predominantly from big data to recommend their likes. Movie recommendation systems provide a mechanism to assist users in classifying users with similar interests. This makes recommender systems essentially a central part of websites and e-commerce applications.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Collaborative filtering (CF) is the way of filtering or calculating items through the sentiments of other people. Content-based filtering methods are based on a description of the item and a profile of the user's preferences.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"The above mentioned approaches and Machine Learning approach leads me to the System.\")))), React.createElement(\"section\", {\n      className: \"portfolio_details_area section_gap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_details_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: \"img/portfolio/portfolio-details.jpg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"offset-lg-1 col-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_right_text mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Retail Store Management System\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"A simple user interface was made using C# which was connected to a Database where user can trade.\"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Language\"), \": \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Icons made by \", React.createElement(\"a\", {\n      href: \"https://www.flaticon.com/authors/freepik\",\n      title: \"Freepik\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Freepik\"), \" from \", React.createElement(\"a\", {\n      href: \"https://www.flaticon.com/\",\n      title: \"Flaticon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"www.flaticon.com\")), \"C#\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Database\"), \": Oracle\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Website\"), \": \", React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"View Project\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Completed\"), \": 30 April 2019\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Retail Store Management System is rather a broad definition that can include merchandising aids, displaying inventory and the methods used to enable transactions. Here, we're talking about the hardware and software that allows the admin to monitor the profitability, customer service and efficient operations in his business.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"A Retail Store Management System (RSMS) is an application  that  executes  the functions associated with it to perform a single or small set of related tasks assigned by the admin.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \"I contributed to this project by creating the database and writing queries for CRUD operations..\")))), React.createElement(\"section\", {\n      className: \"portfolio_details_area section_gap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_details_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: \"img/portfolio/portfolio-details.jpg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"offset-lg-1 col-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"portfolio_right_text mt-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Simulation of Dijkstra's Algorithm using Java Applet\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"A simple user interface was made using C# which was connected to a Database where user can trade.\"), React.createElement(\"ul\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Language\"), \": \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Icons made by \", React.createElement(\"a\", {\n      href: \"https://www.flaticon.com/authors/alfredo-hernandez\",\n      title: \"Alfredo Hernandez\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Alfredo Hernandez\"), \" from \", React.createElement(\"a\", {\n      href: \"https://www.flaticon.com/\",\n      title: \"Flaticon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"www.flaticon.com\")), \"Java\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Website\"), \": \", React.createElement(\"a\", {\n      href: \"https://github.com/obedjunias/Java_RoutingSimulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"View Project\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Completed\"), \": 30 April 2019\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"This project is based on Window application program using Java AWT. There are different frames used in this application for holding the main screen, the text area which displays the working of the algorithm, and the combo box and the buttons. Nodes are drawn on the main screen using mouse and then edges are drawn between any two nodes. By default weights are assigned 50 and can be changed. When RUN button is pressed the algorithm runs with a time lag of some specified milliseconds and stops when the distance is calculated from the source node to all other reachable nodes. The graph can be further reset or be cleared.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"The objective of the project was to use the fundamental concepts of java and also implement some of the features provided by packages to write an efficient code. So, a simple application was developed to demonstrate Dijkstra\\u2019s Algorithm to find the shortest path for directed edges.\")))));\n  }\n\n}","map":{"version":3,"sources":["F:/my-portfolio/src/components/pages.jsx"],"names":["React","Component","PagesC","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport default class PagesC extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n            <section className=\"portfolio_details_area section_gap\">\r\n              <div className=\"container\">\r\n                <div className=\"portfolio_details_inner\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"left_img\">\r\n                        <img className=\"img-fluid\" src=\"img/portfolio/portfolio-details.jpg\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"offset-lg-1 col-lg-5\">\r\n                      <div className=\"portfolio_right_text mt-30\">\r\n                        <h4 className=\"text-uppercase\">Cricket Statistics and Analysis</h4>\r\n                        <p>\r\n                        The main idea behind this project was \r\n                        to create a web page to display statistics of every cricket player.\r\n                        </p>\r\n                        <ul className=\"list\">\r\n                          <li><span>Language</span>: <svg\r\n                                                        width=\"100%\"\r\n                                                        height=\"100%\"\r\n                                                        viewBox=\"0 0 32 32\"\r\n                                                        xmlns=\"https://legacy.python.org/community/logos/python-powered-h.svg\">\r\n                                                        </svg>Python</li>\r\n                          <li><span>Frameworks</span>: flask,highcharts</li>\r\n                          <li><span>Libraries</span>: BeautifulSoup,Pandas</li>\r\n                          <li><span>Website</span>: <a href=\"https://github.com/obedjunias/CricketStats\">View Project</a></li>\r\n                          <li><span>Completed</span>:26 Nov 2019</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <p>\r\n                  Cricket is a sport that generates a variety of statistics.\r\n                    Statistics are recorded for each player during a match, and aggregated over a career. \r\n                    At the professional level, statistics for Test cricket, one-day internationals, and first-class cricket are recorded separately. \r\n                    However, since Test matches are a form of first-class cricket, a player's first-class statistics will include their Test match statistics – but not vice versa. \r\n                    Nowadays records are also maintained for List A and Twenty20 limited over matches. \r\n                    These matches are normally limited over games played domestically at the national level by leading Test nations. \r\n                    Since one-day internationals are a form of List A limited over matches, a player's List A statistics will include their ODI match statistics – but not vice versa.  \r\n                    We provide the web's most comprehensive collection of cricket records, \r\n                    statistics and graphs relating to every facet of international cricket in all forms - Test Cricket, One Day Internationals (ODIs) and Twenty20 Internationals (T20s).\r\n                  </p>\r\n                  <p>The main idea behind this project was to create a web page to display the above mentioned statistics of every cricket player.\r\n                        These statistics are scraped from the internet and then data cleaning and munging was done so as to use this data for further analysis. \r\n                         The data was further used to display player statistics and his achievements in international cricket. \r\n                    <br></br>They can also be graphically visualised on the webpage.</p>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            \r\n            <section className=\"portfolio_details_area section_gap\">\r\n              <div className=\"container\">\r\n                <div className=\"portfolio_details_inner\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"left_img\">\r\n                        <img className=\"img-fluid\" src=\"img/portfolio/portfolio-details.jpg\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"offset-lg-1 col-lg-5\">\r\n                      <div className=\"portfolio_right_text mt-30\">\r\n                        <h4 className=\"text-uppercase\">Movie Recommendation System</h4>\r\n                        <p>\r\n                        Movie recommendation systems provide a mechanism to \r\n                        assist users in classifying users with similar interests. \r\n                        </p>\r\n                        <ul className=\"list\">\r\n                          <li><span>Language</span>: <svg\r\n                                                        width=\"100%\"\r\n                                                        height=\"100%\"\r\n                                                        viewBox=\"0 0 32 32\"\r\n                                                        xmlns=\"https://legacy.python.org/community/logos/python-powered-h.svg\">\r\n                                                        </svg>Python</li>\r\n                          <li><span>Libraries and Frameworks</span>: Numpy,Pandas,Scikit Learn and Matplotlib</li>\r\n                          <li><span>Website</span>: <a href=\"https://github.com/obedjunias/Movie-Recommendation-System\">View Project</a></li>\r\n                          <li><span>On Going</span>:Will be completed soon</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <p>\r\n                  Recommender systems are information filtering tools that aspire to predict the rating for users and items, predominantly from big data to recommend their likes. \r\n                  Movie recommendation systems provide a mechanism to assist users in classifying users with similar interests. \r\n                  This makes recommender systems essentially a central part of websites and e-commerce applications. \r\n                  </p>\r\n                  <p>\r\n                  Collaborative filtering (CF) is the way of filtering or calculating items through the sentiments of other people.\r\n                  Content-based filtering methods are based on a description of the item and a profile of the user's preferences.\r\n                    <br></br>The above mentioned approaches and Machine Learning approach leads me to the System.</p>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"portfolio_details_area section_gap\">\r\n            <div className=\"container\">\r\n              <div className=\"portfolio_details_inner\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"left_img\">\r\n                      <img className=\"img-fluid\" src=\"img/portfolio/portfolio-details.jpg\" alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"offset-lg-1 col-lg-5\">\r\n                    <div className=\"portfolio_right_text mt-30\">\r\n                      <h4 className=\"text-uppercase\">Retail Store Management System</h4>\r\n                      <p>\r\n                      A simple user interface was made using C# which was connected to a Database where user can trade.\r\n                      </p>\r\n                      <ul className=\"list\">\r\n                        <li><span>Language</span>: <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>C#</li>\r\n                        <li><span>Database</span>: Oracle</li>\r\n                        <li><span>Website</span>: <a href=\"#\">View Project</a></li>\r\n                        <li><span>Completed</span>: 30 April 2019</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <p>\r\n                Retail Store Management System is rather a broad definition that can include merchandising aids, displaying inventory \r\n                and the methods used to enable transactions. Here, we're talking about the hardware and software that allows the admin to monitor the profitability, \r\n                customer service and efficient operations in his business.  \r\n                </p>\r\n                <p>\r\n                A Retail Store Management System (RSMS) is an application  that  executes  the functions associated with it to perform a single or small set of related tasks assigned by the admin.\r\n                  <br></br>I contributed to this project by creating the database and writing queries for CRUD operations..</p>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section className=\"portfolio_details_area section_gap\">\r\n          <div className=\"container\">\r\n            <div className=\"portfolio_details_inner\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"left_img\">\r\n                    <img className=\"img-fluid\" src=\"img/portfolio/portfolio-details.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"offset-lg-1 col-lg-5\">\r\n                  <div className=\"portfolio_right_text mt-30\">\r\n                    <h4 className=\"text-uppercase\">Simulation of Dijkstra's Algorithm using Java Applet</h4>\r\n                    <p>\r\n                    A simple user interface was made using C# which was connected to a Database where user can trade.\r\n                    </p>\r\n                    <ul className=\"list\">\r\n                      <li><span>Language</span>: <div>Icons made by <a href=\"https://www.flaticon.com/authors/alfredo-hernandez\" title=\"Alfredo Hernandez\">Alfredo Hernandez</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>Java</li>\r\n                      <li><span>Website</span>: <a href=\"https://github.com/obedjunias/Java_RoutingSimulation\">View Project</a></li>\r\n                      <li><span>Completed</span>: 30 April 2019</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p>\r\n              This project is based on Window application program using Java AWT. \r\n              There are different frames used in this application for holding the main screen, the text area which displays the working of the algorithm, and the combo box and the buttons. \r\n              Nodes are drawn on the main screen using mouse and then edges are drawn between any two nodes. By default weights are assigned 50 and can be changed. \r\n              When RUN button is pressed the algorithm runs with a time lag of some specified milliseconds and stops when the distance is calculated from the source node to all other reachable nodes.\r\n              The graph can be further reset or be cleared. \r\n              </p>\r\n              <p>\r\n              The objective of the project was to use the fundamental concepts of java and also implement some of the features provided by packages to write an efficient code. \r\n              So, a simple application was developed to demonstrate Dijkstra’s Algorithm to find the shortest path for directed edges.</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </div>\r\n          );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}